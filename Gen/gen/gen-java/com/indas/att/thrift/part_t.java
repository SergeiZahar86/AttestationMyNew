/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.indas.att.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.13.0)", date = "2021-05-26")
public class part_t implements org.apache.thrift.TBase<part_t, part_t._Fields>, java.io.Serializable, Cloneable, Comparable<part_t> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("part_t");

  private static final org.apache.thrift.protocol.TField PART_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("part_id", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField OPER_FIELD_DESC = new org.apache.thrift.protocol.TField("oper", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField CARS_FIELD_DESC = new org.apache.thrift.protocol.TField("cars", org.apache.thrift.protocol.TType.LIST, (short)6);
  private static final org.apache.thrift.protocol.TField START_TIME_ATT_FIELD_DESC = new org.apache.thrift.protocol.TField("start_time_att", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField END_TIME_ATT_FIELD_DESC = new org.apache.thrift.protocol.TField("end_time_att", org.apache.thrift.protocol.TType.STRING, (short)8);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new part_tStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new part_tTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.lang.String part_id; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String oper; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<car_t> cars; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String start_time_att; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String end_time_att; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PART_ID((short)1, "part_id"),
    OPER((short)2, "oper"),
    CARS((short)6, "cars"),
    START_TIME_ATT((short)7, "start_time_att"),
    END_TIME_ATT((short)8, "end_time_att");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PART_ID
          return PART_ID;
        case 2: // OPER
          return OPER;
        case 6: // CARS
          return CARS;
        case 7: // START_TIME_ATT
          return START_TIME_ATT;
        case 8: // END_TIME_ATT
          return END_TIME_ATT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PART_ID, new org.apache.thrift.meta_data.FieldMetaData("part_id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OPER, new org.apache.thrift.meta_data.FieldMetaData("oper", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CARS, new org.apache.thrift.meta_data.FieldMetaData("cars", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, car_t.class))));
    tmpMap.put(_Fields.START_TIME_ATT, new org.apache.thrift.meta_data.FieldMetaData("start_time_att", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.END_TIME_ATT, new org.apache.thrift.meta_data.FieldMetaData("end_time_att", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(part_t.class, metaDataMap);
  }

  public part_t() {
  }

  public part_t(
    java.lang.String part_id,
    java.lang.String oper,
    java.util.List<car_t> cars,
    java.lang.String start_time_att,
    java.lang.String end_time_att)
  {
    this();
    this.part_id = part_id;
    this.oper = oper;
    this.cars = cars;
    this.start_time_att = start_time_att;
    this.end_time_att = end_time_att;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public part_t(part_t other) {
    if (other.isSetPart_id()) {
      this.part_id = other.part_id;
    }
    if (other.isSetOper()) {
      this.oper = other.oper;
    }
    if (other.isSetCars()) {
      java.util.List<car_t> __this__cars = new java.util.ArrayList<car_t>(other.cars.size());
      for (car_t other_element : other.cars) {
        __this__cars.add(new car_t(other_element));
      }
      this.cars = __this__cars;
    }
    if (other.isSetStart_time_att()) {
      this.start_time_att = other.start_time_att;
    }
    if (other.isSetEnd_time_att()) {
      this.end_time_att = other.end_time_att;
    }
  }

  public part_t deepCopy() {
    return new part_t(this);
  }

  @Override
  public void clear() {
    this.part_id = null;
    this.oper = null;
    this.cars = null;
    this.start_time_att = null;
    this.end_time_att = null;
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getPart_id() {
    return this.part_id;
  }

  public part_t setPart_id(@org.apache.thrift.annotation.Nullable java.lang.String part_id) {
    this.part_id = part_id;
    return this;
  }

  public void unsetPart_id() {
    this.part_id = null;
  }

  /** Returns true if field part_id is set (has been assigned a value) and false otherwise */
  public boolean isSetPart_id() {
    return this.part_id != null;
  }

  public void setPart_idIsSet(boolean value) {
    if (!value) {
      this.part_id = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getOper() {
    return this.oper;
  }

  public part_t setOper(@org.apache.thrift.annotation.Nullable java.lang.String oper) {
    this.oper = oper;
    return this;
  }

  public void unsetOper() {
    this.oper = null;
  }

  /** Returns true if field oper is set (has been assigned a value) and false otherwise */
  public boolean isSetOper() {
    return this.oper != null;
  }

  public void setOperIsSet(boolean value) {
    if (!value) {
      this.oper = null;
    }
  }

  public int getCarsSize() {
    return (this.cars == null) ? 0 : this.cars.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<car_t> getCarsIterator() {
    return (this.cars == null) ? null : this.cars.iterator();
  }

  public void addToCars(car_t elem) {
    if (this.cars == null) {
      this.cars = new java.util.ArrayList<car_t>();
    }
    this.cars.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<car_t> getCars() {
    return this.cars;
  }

  public part_t setCars(@org.apache.thrift.annotation.Nullable java.util.List<car_t> cars) {
    this.cars = cars;
    return this;
  }

  public void unsetCars() {
    this.cars = null;
  }

  /** Returns true if field cars is set (has been assigned a value) and false otherwise */
  public boolean isSetCars() {
    return this.cars != null;
  }

  public void setCarsIsSet(boolean value) {
    if (!value) {
      this.cars = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getStart_time_att() {
    return this.start_time_att;
  }

  public part_t setStart_time_att(@org.apache.thrift.annotation.Nullable java.lang.String start_time_att) {
    this.start_time_att = start_time_att;
    return this;
  }

  public void unsetStart_time_att() {
    this.start_time_att = null;
  }

  /** Returns true if field start_time_att is set (has been assigned a value) and false otherwise */
  public boolean isSetStart_time_att() {
    return this.start_time_att != null;
  }

  public void setStart_time_attIsSet(boolean value) {
    if (!value) {
      this.start_time_att = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getEnd_time_att() {
    return this.end_time_att;
  }

  public part_t setEnd_time_att(@org.apache.thrift.annotation.Nullable java.lang.String end_time_att) {
    this.end_time_att = end_time_att;
    return this;
  }

  public void unsetEnd_time_att() {
    this.end_time_att = null;
  }

  /** Returns true if field end_time_att is set (has been assigned a value) and false otherwise */
  public boolean isSetEnd_time_att() {
    return this.end_time_att != null;
  }

  public void setEnd_time_attIsSet(boolean value) {
    if (!value) {
      this.end_time_att = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case PART_ID:
      if (value == null) {
        unsetPart_id();
      } else {
        setPart_id((java.lang.String)value);
      }
      break;

    case OPER:
      if (value == null) {
        unsetOper();
      } else {
        setOper((java.lang.String)value);
      }
      break;

    case CARS:
      if (value == null) {
        unsetCars();
      } else {
        setCars((java.util.List<car_t>)value);
      }
      break;

    case START_TIME_ATT:
      if (value == null) {
        unsetStart_time_att();
      } else {
        setStart_time_att((java.lang.String)value);
      }
      break;

    case END_TIME_ATT:
      if (value == null) {
        unsetEnd_time_att();
      } else {
        setEnd_time_att((java.lang.String)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case PART_ID:
      return getPart_id();

    case OPER:
      return getOper();

    case CARS:
      return getCars();

    case START_TIME_ATT:
      return getStart_time_att();

    case END_TIME_ATT:
      return getEnd_time_att();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case PART_ID:
      return isSetPart_id();
    case OPER:
      return isSetOper();
    case CARS:
      return isSetCars();
    case START_TIME_ATT:
      return isSetStart_time_att();
    case END_TIME_ATT:
      return isSetEnd_time_att();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof part_t)
      return this.equals((part_t)that);
    return false;
  }

  public boolean equals(part_t that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_part_id = true && this.isSetPart_id();
    boolean that_present_part_id = true && that.isSetPart_id();
    if (this_present_part_id || that_present_part_id) {
      if (!(this_present_part_id && that_present_part_id))
        return false;
      if (!this.part_id.equals(that.part_id))
        return false;
    }

    boolean this_present_oper = true && this.isSetOper();
    boolean that_present_oper = true && that.isSetOper();
    if (this_present_oper || that_present_oper) {
      if (!(this_present_oper && that_present_oper))
        return false;
      if (!this.oper.equals(that.oper))
        return false;
    }

    boolean this_present_cars = true && this.isSetCars();
    boolean that_present_cars = true && that.isSetCars();
    if (this_present_cars || that_present_cars) {
      if (!(this_present_cars && that_present_cars))
        return false;
      if (!this.cars.equals(that.cars))
        return false;
    }

    boolean this_present_start_time_att = true && this.isSetStart_time_att();
    boolean that_present_start_time_att = true && that.isSetStart_time_att();
    if (this_present_start_time_att || that_present_start_time_att) {
      if (!(this_present_start_time_att && that_present_start_time_att))
        return false;
      if (!this.start_time_att.equals(that.start_time_att))
        return false;
    }

    boolean this_present_end_time_att = true && this.isSetEnd_time_att();
    boolean that_present_end_time_att = true && that.isSetEnd_time_att();
    if (this_present_end_time_att || that_present_end_time_att) {
      if (!(this_present_end_time_att && that_present_end_time_att))
        return false;
      if (!this.end_time_att.equals(that.end_time_att))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetPart_id()) ? 131071 : 524287);
    if (isSetPart_id())
      hashCode = hashCode * 8191 + part_id.hashCode();

    hashCode = hashCode * 8191 + ((isSetOper()) ? 131071 : 524287);
    if (isSetOper())
      hashCode = hashCode * 8191 + oper.hashCode();

    hashCode = hashCode * 8191 + ((isSetCars()) ? 131071 : 524287);
    if (isSetCars())
      hashCode = hashCode * 8191 + cars.hashCode();

    hashCode = hashCode * 8191 + ((isSetStart_time_att()) ? 131071 : 524287);
    if (isSetStart_time_att())
      hashCode = hashCode * 8191 + start_time_att.hashCode();

    hashCode = hashCode * 8191 + ((isSetEnd_time_att()) ? 131071 : 524287);
    if (isSetEnd_time_att())
      hashCode = hashCode * 8191 + end_time_att.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(part_t other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetPart_id()).compareTo(other.isSetPart_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPart_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.part_id, other.part_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetOper()).compareTo(other.isSetOper());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOper()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.oper, other.oper);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCars()).compareTo(other.isSetCars());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCars()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cars, other.cars);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStart_time_att()).compareTo(other.isSetStart_time_att());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStart_time_att()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.start_time_att, other.start_time_att);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEnd_time_att()).compareTo(other.isSetEnd_time_att());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEnd_time_att()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.end_time_att, other.end_time_att);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("part_t(");
    boolean first = true;

    sb.append("part_id:");
    if (this.part_id == null) {
      sb.append("null");
    } else {
      sb.append(this.part_id);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("oper:");
    if (this.oper == null) {
      sb.append("null");
    } else {
      sb.append(this.oper);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cars:");
    if (this.cars == null) {
      sb.append("null");
    } else {
      sb.append(this.cars);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("start_time_att:");
    if (this.start_time_att == null) {
      sb.append("null");
    } else {
      sb.append(this.start_time_att);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("end_time_att:");
    if (this.end_time_att == null) {
      sb.append("null");
    } else {
      sb.append(this.end_time_att);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class part_tStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public part_tStandardScheme getScheme() {
      return new part_tStandardScheme();
    }
  }

  private static class part_tStandardScheme extends org.apache.thrift.scheme.StandardScheme<part_t> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, part_t struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PART_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.part_id = iprot.readString();
              struct.setPart_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // OPER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.oper = iprot.readString();
              struct.setOperIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // CARS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.cars = new java.util.ArrayList<car_t>(_list0.size);
                @org.apache.thrift.annotation.Nullable car_t _elem1;
                for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                {
                  _elem1 = new car_t();
                  _elem1.read(iprot);
                  struct.cars.add(_elem1);
                }
                iprot.readListEnd();
              }
              struct.setCarsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // START_TIME_ATT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.start_time_att = iprot.readString();
              struct.setStart_time_attIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // END_TIME_ATT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.end_time_att = iprot.readString();
              struct.setEnd_time_attIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, part_t struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.part_id != null) {
        oprot.writeFieldBegin(PART_ID_FIELD_DESC);
        oprot.writeString(struct.part_id);
        oprot.writeFieldEnd();
      }
      if (struct.oper != null) {
        oprot.writeFieldBegin(OPER_FIELD_DESC);
        oprot.writeString(struct.oper);
        oprot.writeFieldEnd();
      }
      if (struct.cars != null) {
        oprot.writeFieldBegin(CARS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.cars.size()));
          for (car_t _iter3 : struct.cars)
          {
            _iter3.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.start_time_att != null) {
        oprot.writeFieldBegin(START_TIME_ATT_FIELD_DESC);
        oprot.writeString(struct.start_time_att);
        oprot.writeFieldEnd();
      }
      if (struct.end_time_att != null) {
        oprot.writeFieldBegin(END_TIME_ATT_FIELD_DESC);
        oprot.writeString(struct.end_time_att);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class part_tTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public part_tTupleScheme getScheme() {
      return new part_tTupleScheme();
    }
  }

  private static class part_tTupleScheme extends org.apache.thrift.scheme.TupleScheme<part_t> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, part_t struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetPart_id()) {
        optionals.set(0);
      }
      if (struct.isSetOper()) {
        optionals.set(1);
      }
      if (struct.isSetCars()) {
        optionals.set(2);
      }
      if (struct.isSetStart_time_att()) {
        optionals.set(3);
      }
      if (struct.isSetEnd_time_att()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetPart_id()) {
        oprot.writeString(struct.part_id);
      }
      if (struct.isSetOper()) {
        oprot.writeString(struct.oper);
      }
      if (struct.isSetCars()) {
        {
          oprot.writeI32(struct.cars.size());
          for (car_t _iter4 : struct.cars)
          {
            _iter4.write(oprot);
          }
        }
      }
      if (struct.isSetStart_time_att()) {
        oprot.writeString(struct.start_time_att);
      }
      if (struct.isSetEnd_time_att()) {
        oprot.writeString(struct.end_time_att);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, part_t struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        struct.part_id = iprot.readString();
        struct.setPart_idIsSet(true);
      }
      if (incoming.get(1)) {
        struct.oper = iprot.readString();
        struct.setOperIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TList _list5 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.cars = new java.util.ArrayList<car_t>(_list5.size);
          @org.apache.thrift.annotation.Nullable car_t _elem6;
          for (int _i7 = 0; _i7 < _list5.size; ++_i7)
          {
            _elem6 = new car_t();
            _elem6.read(iprot);
            struct.cars.add(_elem6);
          }
        }
        struct.setCarsIsSet(true);
      }
      if (incoming.get(3)) {
        struct.start_time_att = iprot.readString();
        struct.setStart_time_attIsSet(true);
      }
      if (incoming.get(4)) {
        struct.end_time_att = iprot.readString();
        struct.setEnd_time_attIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

